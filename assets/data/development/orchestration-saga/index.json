{"hash":"eadc1cf98272e6635158b52ac6167ef00a990c8e","data":{"markdownPage":{"id":"232c66e778218b5b7fc1c64e5ebd7dd2","title":"Orchestration Saga with Axon Framework","description":"","path":"/development/orchestration-saga/","timeToRead":3,"content":"<h1 id=\"orchestration-saga-with-axon-framework\"><a href=\"#orchestration-saga-with-axon-framework\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Orchestration Saga with Axon Framework</h1>\n<h2 id=\"axon-saga-labs\"><a href=\"#axon-saga-labs\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Axon Saga Labs</h2>\n<p>12st Mall 주문 프로세스를 Process Visibility가 높은 Orchestration 타입을 적용한다.\n기본적으로 생성된 템플릿 코드에 Biz 로직을 추가해 주문 프로세스가 동작하도록 코드를 완성해 본다.</p>\n<h3 id=\"시나리오\"><a href=\"#%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>시나리오</h3>\n<ul>\n<li>주문 커맨드에 따라 OrderPlaced 이벤트가 생성된다.</li>\n<li>OrderPlaced 이벤트로 Order Saga 프로세스가 구동된다.</li>\n<li>Saga Process는 배송시작 커맨드를 호출하고 DeliveryStarted 이벤트를 생성한다.</li>\n<li>이어, 재고차감 커맨드가 호출되고 StockDecreased 이벤트를 생성한다.</li>\n<li>최종 주문상태를 업데이트하는 절차로 Saga Process는 종료된다.</li>\n<li>각 커맨드 호출시, 오류가 발생하면 이의 처리를 위해 Compensation Logic이 각각 실행된다. </li>\n</ul>\n<h3 id=\"saga-modeling\"><a href=\"#saga-modeling\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Saga Modeling</h3>\n<ul>\n<li>모델 상단의 Fork 메뉴를 클릭한다.</li>\n<li>복제돤 모델을 다음과 같이 오케스트레이션 한다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/35618409/229645326-3a24d5e3-81f3-4ecb-9e6f-2101302eb697.png\" alt=\"image\"></p>\n<h4 id=\"process-orchestration---direction--label\"><a href=\"#process-orchestration---direction--label\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Process Orchestration ( > direction, () Label)</h4>\n<ul>\n<li>OrderPlaced > Order Saga, (1.start)</li>\n<li>Order Saga > start delivery, (2)</li>\n<li>DeliveryStarted > Order Saga, (3)</li>\n<li>Order Saga > decrease stock, (4)</li>\n<li>StockDecreased > Order Saga, (5)</li>\n<li>Order Saga > update status, (6)</li>\n<li>OrderCompleted > Order Saga, (7.end)</li>\n<li>Order Saga > order cancel, (2')</li>\n<li>Order Saga > cancel delivery, (4')</li>\n</ul>\n<h4 id=\"code-push--load-on-gitpod\"><a href=\"#code-push--load-on-gitpod\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Code Push &#x26; Load on GitPod</h4>\n<ul>\n<li>Code Preview > Git 아이콘을 눌러 내 Repository에 Push한다.\n<img src=\"https://user-images.githubusercontent.com/35618409/229663138-ec1a8a2c-a50f-4c3c-ba4c-75c1ea9057ad.png\" alt=\"image\"></li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/35618409/229649084-15d388b9-3246-43b2-956c-d1012f47ce12.png\" alt=\"image\"></p>\n<ul>\n<li>GitPod 환경에서 로딩한다.\n<img src=\"https://user-images.githubusercontent.com/35618409/229649200-cd48e7fb-54bb-46af-9806-0f893d9375bb.png\" alt=\"image\"></li>\n</ul>\n<h3 id=\"axon-server\"><a href=\"#axon-server\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Axon Server</h3>\n<h4 id=\"infra--docker-composeyml\"><a href=\"#infra--docker-composeyml\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>infra > docker-compose.yml</h4>\n<ul>\n<li>Axon Server는 대시보드를 위한 8024, 메시지 gRPC를 위한 8124 포트를 사용한다.</li>\n<li>각 서비스들의 Offset Token 관리를 위한 Token Store(MySQL)가 Lab 실행시 생성된다.</li>\n</ul>\n<h2 id=\"orchestration-code-completion\"><a href=\"#orchestration-code-completion\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Orchestration Code Completion</h2>\n<h3 id=\"product-service\"><a href=\"#product-service\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Product Service</h3>\n<p>상품 Domain 코드에 Biz 로직을 완성한다.</p>\n<ul>\n<li>재고 부족시 도메인 오류 발생코드를 추가한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># ProductAggregate - @DecreaseStockCommand 재고부족시 Exception 발생 \n\tif(this.getStock() &lt; command.getStock()) throw new IllegalStateException(&quot;Out of Stock. !&quot;);  // 코드추가</code></pre>\n<ul>\n<li>product > ProductAggregate.java 내 다음 코드를 추가한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># @EventSourcingHandler :: StockIncreasedEvent : \n    setStock(getStock() + event.getStock());  // 코드추가\n\n#  @EventSourcingHandler :: StockDecreasedEvent : \n    setStock(getStock() - event.getStock());  // 코드추가</code></pre>\n<h3 id=\"order-service\"><a href=\"#order-service\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Order Service</h3>\n<p>주문 Domain 코드에 Biz 로직을 완성한다.</p>\n<ul>\n<li>order > OrderAggregate.java 내 다음 코드를 추가한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># @EventSourcingHandler :: OrderPlacedEvent :\n     setStatus(&quot;OrderPlaced&quot;); \t\t\t// 코드추가\n# @EventSourcingHandler :: OrderCompletedEvent : \n     setStatus(&quot;OrderCompleted&quot;); \t\t// 코드추가\n# @EventSourcingHandler :: OrderCancelledEvent :      \n      setStatus(&quot;OrderCancelled&quot;);\t\t// 코드추가</code></pre>\n<h3 id=\"delivery-service\"><a href=\"#delivery-service\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Delivery Service</h3>\n<p>배송 Domain 코드에 Biz 로직을 완성한다.</p>\n<ul>\n<li>delivery > DeliveryAggregate.java 내 다음 코드를 추가한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># @EventSourcingHandler :: DeliveryStartedEvent :\n      setStatus(&quot;DeliveryStarted&quot;); \t\t// 코드추가\n# @EventSourcingHandler :: DeliveryCancelledEvent : \n      setStatus(&quot;DeliveryCancelled&quot;); \t\t// 코드추가</code></pre>\n<h3 id=\"ordersaga\"><a href=\"#ordersaga\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>OrderSaga</h3>\n<p>주문 오케스트레이션을 수행하도록 OrderSaga 코드를 완성한다.</p>\n<h4 id=\"1-saga-start\"><a href=\"#1-saga-start\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Saga Start</h4>\n<ul>\n<li>OrderPlaced 이벤트로부터 Correlation key 설정 : 24 라인</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">\t@SagaEventHandler(associationProperty = &quot;orderId&quot;)</code></pre>\n<h4 id=\"2-배송시작-command-생성-및-호출--27라인\"><a href=\"#2-%EB%B0%B0%EC%86%A1%EC%8B%9C%EC%9E%91-command-%EC%83%9D%EC%84%B1-%EB%B0%8F-%ED%98%B8%EC%B6%9C--27%EB%9D%BC%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. 배송시작 Command 생성 및 호출 : 27라인</h4>\n<pre class=\"language-text\"><code class=\"language-text\">command.setOrderId(event.getOrderId());\ncommand.setProductId(event.getProductId());\ncommand.setQty(event.getQty());\ncommand.setUserId(event.getUserId());\n\n# 배송실패시, 주문취소 Compensation 처리 : OrderCancelCommand\norderCancelCommand.setOrderId(event.getOrderId());  \t// 코드추가</code></pre>\n<h4 id=\"3-deliverystartedevent-이벤트로부터-correlation-key-설정\"><a href=\"#3-deliverystartedevent-%EC%9D%B4%EB%B2%A4%ED%8A%B8%EB%A1%9C%EB%B6%80%ED%84%B0-correlation-key-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. DeliveryStartedEvent 이벤트로부터 Correlation key 설정</h4>\n<pre class=\"language-text\"><code class=\"language-text\">\t@SagaEventHandler(associationProperty = &quot;orderId&quot;)</code></pre>\n<h4 id=\"4-재고차감-command-생성-및-호출\"><a href=\"#4-%EC%9E%AC%EA%B3%A0%EC%B0%A8%EA%B0%90-command-%EC%83%9D%EC%84%B1-%EB%B0%8F-%ED%98%B8%EC%B6%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. 재고차감 Command 생성 및 호출</h4>\n<pre class=\"language-text\"><code class=\"language-text\">command.setProductId(event.getProductId());\ncommand.setStock(event.getQty());\t\ncommand.setOrderId(event.getOrderId());\n\n# 재고차감 실패시, 배송취소 Compensation 처리 : CancelDeliveryCommand\ncancelDeliveryCommand.setDeliveryId(event.getDeliveryId());\t// 코드추가</code></pre>\n<h4 id=\"5-stockdecreasedevent-이벤트로부터-correlation-key-설정\"><a href=\"#5-stockdecreasedevent-%EC%9D%B4%EB%B2%A4%ED%8A%B8%EB%A1%9C%EB%B6%80%ED%84%B0-correlation-key-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. StockDecreasedEvent 이벤트로부터 Correlation key 설정</h4>\n<pre class=\"language-text\"><code class=\"language-text\">\t@SagaEventHandler(associationProperty = &quot;orderId&quot;)</code></pre>\n<h4 id=\"6-주문완료-command-생성-및-호출\"><a href=\"#6-%EC%A3%BC%EB%AC%B8%EC%99%84%EB%A3%8C-command-%EC%83%9D%EC%84%B1-%EB%B0%8F-%ED%98%B8%EC%B6%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>6. 주문완료 Command 생성 및 호출</h4>\n<pre class=\"language-text\"><code class=\"language-text\">command.setOrderId(event.getOrderId());</code></pre>\n<h4 id=\"7-saga-end\"><a href=\"#7-saga-end\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>7. Saga End</h4>\n<ul>\n<li>OrderCompletedEvent 이벤트로부터 Correlation key 설정</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">\t@SagaEventHandler(associationProperty = &quot;orderId&quot;)</code></pre>\n<ul>\n<li>Saga Process 종료</li>\n</ul>\n<h2 id=\"12st-mall-테스트\"><a href=\"#12st-mall-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>12st Mall 테스트</h2>\n<ul>\n<li>Rest API를 활용해 생성된 Axon Saga 기반 몰을 테스트 한다.</li>\n<li>먼저 Common API를 빌드한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd common-api\nmvn clean install</code></pre>\n<ul>\n<li>각 마이크로 서비스를 실행한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># new terminal\ncd order\nmvn clean spring-boot:run\n\n# new terminal\ncd product\nmvn clean spring-boot:run\n\n# new terminal\ncd delivery\nmvn clean spring-boot:run</code></pre>\n<ul>\n<li>상품서비스(:8082)에 테스트용 상품을 등록한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># new terminal\nhttp POST :8082/products productName=TV stock=100</code></pre>\n<ul>\n<li>등록된 상품 Id를 복사해 둔다.\n<img src=\"https://user-images.githubusercontent.com/35618409/229345799-6a86743c-d3b1-43b7-9a94-91c4e50cfd9b.png\" alt=\"image\"></li>\n<li>복사한 상품 Id로 10개의 TV를 구매하는 주문을 생성한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http POST :8081/orders productId=[상품 Id] productName=TV qty=10 userId=1001</code></pre>\n<ul>\n<li>생성된 주문 Id를 복사해 둔다.\n<img src=\"https://user-images.githubusercontent.com/35618409/229346264-89d2c227-5dc8-454d-acb0-1c24bc0da63d.png\" alt=\"image\"></li>\n</ul>\n<h2 id=\"12st-mall-saga-compensation-검증\"><a href=\"#12st-mall-saga-compensation-%EA%B2%80%EC%A6%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>12st Mall Saga Compensation 검증</h2>\n<h3 id=\"주문-생성\"><a href=\"#%EC%A3%BC%EB%AC%B8-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>주문 생성</h3>\n<ul>\n<li>상품 Id로 100개의 TV를 구매하는 주문을 생성하고 주문번호를 복사해 두자.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http POST :8081/orders productId=[상품 Id] productName=TV qty=100 userId=1001</code></pre>\n<ul>\n<li>재고 개수(90)보다 많은 주문으로 상품서비스에서 오류를 리턴한다.</li>\n</ul>\n<ul>\n<li>주문 번호로 생성된 주문의 최종 상태와 이벤트 이력을 조회해 본다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http GET :8081/orders/[주문번호]\nhttp GET :8081/orders/[주문번호]/events</code></pre>\n<ul>\n<li>배송서비스의 배송 상태를 조회해 본다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http GET :8083/deliveries</code></pre>\n<h3 id=\"확장-미션---주문서비스-debugging\"><a href=\"#%ED%99%95%EC%9E%A5-%EB%AF%B8%EC%85%98---%EC%A3%BC%EB%AC%B8%EC%84%9C%EB%B9%84%EC%8A%A4-debugging\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>[확장 미션] - 주문서비스 Debugging</h3>\n<ul>\n<li>주문서비스를 종료한다.</li>\n<li>OrderSaga 에 SagaEventHandler별로 Break Points를 추가한다.</li>\n<li>주문서비스를 디버그 모드로 실행한다.</li>\n<li>새로운 주문을 생성한 다음 Debug Point를 확인하면서 Orchestration 흐름을 식별한다.</li>\n<li>재고보다 많은 수량을 넣어 Debug Point를 확인한다.</li>\n</ul>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Orchestration Saga with Axon Framework","anchor":"#orchestration-saga-with-axon-framework"},{"depth":2,"value":"Axon Saga Labs","anchor":"#axon-saga-labs"},{"depth":3,"value":"시나리오","anchor":"#시나리오"},{"depth":3,"value":"Saga Modeling","anchor":"#saga-modeling"},{"depth":4,"value":"Process Orchestration ( > direction, () Label)","anchor":"#process-orchestration---direction--label"},{"depth":4,"value":"Code Push & Load on GitPod","anchor":"#code-push--load-on-gitpod"},{"depth":3,"value":"Axon Server","anchor":"#axon-server"},{"depth":4,"value":"infra > docker-compose.yml","anchor":"#infra--docker-composeyml"},{"depth":2,"value":"Orchestration Code Completion","anchor":"#orchestration-code-completion"},{"depth":3,"value":"Product Service","anchor":"#product-service"},{"depth":3,"value":"Order Service","anchor":"#order-service"},{"depth":3,"value":"Delivery Service","anchor":"#delivery-service"},{"depth":3,"value":"OrderSaga","anchor":"#ordersaga"},{"depth":4,"value":"1. Saga Start","anchor":"#1-saga-start"},{"depth":4,"value":"2. 배송시작 Command 생성 및 호출 : 27라인","anchor":"#2-배송시작-command-생성-및-호출--27라인"},{"depth":4,"value":"3. DeliveryStartedEvent 이벤트로부터 Correlation key 설정","anchor":"#3-deliverystartedevent-이벤트로부터-correlation-key-설정"},{"depth":4,"value":"4. 재고차감 Command 생성 및 호출","anchor":"#4-재고차감-command-생성-및-호출"},{"depth":4,"value":"5. StockDecreasedEvent 이벤트로부터 Correlation key 설정","anchor":"#5-stockdecreasedevent-이벤트로부터-correlation-key-설정"},{"depth":4,"value":"6. 주문완료 Command 생성 및 호출","anchor":"#6-주문완료-command-생성-및-호출"},{"depth":4,"value":"7. Saga End","anchor":"#7-saga-end"},{"depth":2,"value":"12st Mall 테스트","anchor":"#12st-mall-테스트"},{"depth":2,"value":"12st Mall Saga Compensation 검증","anchor":"#12st-mall-saga-compensation-검증"},{"depth":3,"value":"주문 생성","anchor":"#주문-생성"},{"depth":3,"value":" - 주문서비스 Debugging","anchor":"#확장-미션---주문서비스-debugging"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/toppings/test-unit/","title":"Unit-Test"}},{"node":{"path":"/toppings/k8s-kubernetes/","title":"Kubernetes"}},{"node":{"path":"/toppings/test-microcks/","title":"API Mock Server"}},{"node":{"path":"/toppings/test-messaging/","title":"Contract Test (비동기호출)"}},{"node":{"path":"/toppings/test-contract/","title":"Contract Test (동기호출)"}},{"node":{"path":"/toppings/cicd-git-action/","title":"Github Action"}},{"node":{"path":"/toppings/cicd-argo/","title":"Argo"}},{"node":{"path":"/tool/plsql-2-java/","title":"PL/SQL to Java 자동 테스팅"}},{"node":{"path":"/tool/setup-on-prem/","title":"Running on Docker Compose (with Github)"}},{"node":{"path":"/tool/si-gpt/","title":""}},{"node":{"path":"/tool/pbc-marketplace/","title":"컴포저블 엔터프라이즈 구현을 위한 PBCs(Packaged Business Capabilities)"}},{"node":{"path":"/tool/on-prem-inst/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/on-prem-inst-gitea/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/marketplace/","title":"마켓플레이스"}},{"node":{"path":"/tool/model-driven/","title":"코드 생성"}},{"node":{"path":"/tool/event-storming-tool/","title":"이벤트스토밍"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"인프라 모델링 (쿠버네티스)"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s 배포 모델링"}},{"node":{"path":"/tool/google-drive-examples/","title":"Quick Start"}},{"node":{"path":"/tool/event-monitoring/","title":"이벤트 모니터링"}},{"node":{"path":"/tool/development-practice/","title":"강의 개발 및 실습 환경"}},{"node":{"path":"/tool/deepseek-ai/","title":""}},{"node":{"path":"/tool/ddl-to-eventstorming/","title":"DDL To EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"클라우드 IDE"}},{"node":{"path":"/tool/chat-gpt/","title":"AI 기반 모델 생성"}},{"node":{"path":"/tool/bc-domain-gen/","title":"자연어 기반 Bounded Context & 도메인 설계 AI"}},{"node":{"path":"/tool/aggregate-design/","title":"애그리거트(Aggregate) 설계"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template(준비중)"}},{"node":{"path":"/templates-language/python-template/","title":"Python Template "}},{"node":{"path":"/templates-language/go-template/","title":"Go Template"}},{"node":{"path":"/started/key-features/","title":"주요 기능"}},{"node":{"path":"/started/domain-driven/","title":"도메인 주도 설계 학습"}},{"node":{"path":"/started/","title":"소개"}},{"node":{"path":"/started/event-storming-learning/","title":"이벤트스토밍 학습"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress 배포모델 설계"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"자동확장(HPA) 배포"}},{"node":{"path":"/info/pricing/","title":"가격 정책"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"마이크로서비스 구현 및 동작원리 이해"}},{"node":{"path":"/info/partnership/","title":"파트너 프로그램"}},{"node":{"path":"/info/company/","title":"기업 사례"}},{"node":{"path":"/info/consulting/","title":"컨설팅"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub 방식의 연동 - Choreography with Idempotency"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub 방식의 연동 - Choreography with Deadline added"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub 방식의 연동 "}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Req/Res 방식의 MSA 연동 "}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/kafka-basic/","title":"Kafka 기본 명령어 "}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub 방식의 연동 - Compensation 과 Correlation"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/development/cna-start/","title":"단위 마이크로 서비스의 실행 "}},{"node":{"path":"/development/circuit-breaker/","title":"Req/Res 방식에서 장애전파 차단 - 서킷브레이커 "}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/example-scenario/library-system/","title":"도서관 시스템"}},{"node":{"path":"/example-scenario/online-lecture/","title":"인터넷 강의수강 시스템"}},{"node":{"path":"/example-scenario/food-delivery/","title":"음식배달"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"숙소예약"}},{"node":{"path":"/custom-template/unit-test/","title":"테스트 자동화"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"동물병원 진료시스템"}},{"node":{"path":"/custom-template/tutorial/","title":"커스텀 템플릿 개념"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/understanding-template-structure/","title":"템플릿 구조의 이해"}},{"node":{"path":"/custom-template/template-syntax/","title":"Template 문법의 이해"}},{"node":{"path":"/custom-template/template-structure/","title":"템플릿 파일 구조"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"커스텀 템플릿 생성 방법"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"반복문 & 조건문"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0 기반 목 서버 생성 토핑(New)"}},{"node":{"path":"/custom-template/custom-template/","title":"Eventstorming Template Objects"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/custom-template/creating-custom-template-1/","title":"커스텀 템플릿 생성"}},{"node":{"path":"/custom-template/designing-template-helper/","title":"Built-in Helper functions"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/","title":"이벤트스토밍"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}}]}},"context":{}}