{"hash":"75411c023f438c73c72b1b2a57d1054a4fe0a84a","data":{"markdownPage":{"id":"ac05a7da63c3d5bb73da9f9be80ee65d","title":"Kafka 기본 명령어 ","description":"","path":"/development/kafka-basic/","timeToRead":2,"content":"<h1 id=\"kafka-기본-명령어\"><a href=\"#kafka-%EA%B8%B0%EB%B3%B8-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka 기본 명령어</h1>\n<h2 id=\"kafka-기본-명령-이해하기\"><a href=\"#kafka-%EA%B8%B0%EB%B3%B8-%EB%AA%85%EB%A0%B9-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka 기본 명령 이해하기</h2>\n<ul>\n<li>IDE 를 실행하기 위하여 CODE > Project IDE 를 선택하여 Gitpod 에 접속한다.</li>\n<li>kafka 를 docker를 통하여 실행한다:</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd kafka\ndocker-compose up</code></pre>\n<blockquote>\n<p>kafka 는 zookeeper 서버와 함께 2개의 프로세스로 기동된다.\ndocker-compose file 은 하나 이상의 docker 서비스를 실행관리할 때 사용된다.</p>\n</blockquote>\n<ul>\n<li>kafka 유틸리티가 포함된 위치에 접속하기 위하여 docker 를 통하여 shell 에 진입한다:</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd kafka\ndocker-compose exec -it kafka /bin/bash</code></pre>\n<pre class=\"language-text\"><code class=\"language-text\">cd /bin</code></pre>\n<h3 id=\"토픽생성\"><a href=\"#%ED%86%A0%ED%94%BD%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>토픽생성</h3>\n<ul>\n<li>replication 1개, partition 1개로 example이라는 토픽을 생성합니다.</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\">./kafka-topics --bootstrap-server http://localhost:9092 <span class=\"token parameter variable\">--topic</span> example <span class=\"token parameter variable\">--create</span> <span class=\"token parameter variable\">--partitions</span> <span class=\"token number\">1</span> --replication-factor <span class=\"token number\">1</span></code></pre>\n<blockquote>\n<p>--create : 생성옵션\n--bootstrap-server : 토픽을 생성할 카프카 클러스터를 구성하는 브로커들의 IP와 port\n--replication-factor : Topic의 파티션을 복제할 복제 개수(2이면 1개의 복제본을 사용한다는 의미)\n--partitions : 파티션 개수\n--config는 추가적인 설정(e.g. retention.ms는 데이터 유지기간(ms) 86400000ms = 1일)</p>\n</blockquote>\n<h3 id=\"토픽-리스트-보기\"><a href=\"#%ED%86%A0%ED%94%BD-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%B3%B4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>토픽 리스트 보기</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">./kafka-topics --bootstrap-server http://localhost:9092 <span class=\"token parameter variable\">--list</span> --exclude-internal   </code></pre>\n<blockquote>\n<p>--list : 조회옵션\n--exclude-internal : Kafka 내부 관리를 위한 Topic을 조회 대상에서 제외</p>\n</blockquote>\n<h3 id=\"토픽-상세-조회\"><a href=\"#%ED%86%A0%ED%94%BD-%EC%83%81%EC%84%B8-%EC%A1%B0%ED%9A%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>토픽 상세 조회</h3>\n<pre class=\"language-text\"><code class=\"language-text\">./kafka-topics --bootstrap-server http://localhost:9092 --topic example --describe </code></pre>\n<blockquote>\n<p>--describe 옵션\n파티션 개수, 복제된 파티션이 위치한 브로커의 번호, 기타 토픽을 구성하는 설정 출력</p>\n</blockquote>\n<h3 id=\"토픽-옵션-수정\"><a href=\"#%ED%86%A0%ED%94%BD-%EC%98%B5%EC%85%98-%EC%88%98%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>토픽 옵션 수정</h3>\n<ul>\n<li>토픽의 파티션 개수를 2개로 늘린다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">./kafka-topics --bootstrap-server http://localhost:9092 --topic example --alter --partitions 2 \n./kafka-topics --bootstrap-server http://localhost:9092 --topic example --describe </code></pre>\n<blockquote>\n<p>토픽의 파티션 수는 증가만 가능하고, 감소는 불가능</p>\n</blockquote>\n<h3 id=\"kafka-producer-연결-후-메세지-publish\"><a href=\"#kafka-producer-%EC%97%B0%EA%B2%B0-%ED%9B%84-%EB%A9%94%EC%84%B8%EC%A7%80-publish\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka producer 연결 후 메세지 Publish</h3>\n<ul>\n<li>새로운 터미널 창에서 Console Producer를 실행한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd kafka\ndocker-compose exec -it kafka /bin/bash</code></pre>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /bin\n./kafka-console-producer --broker-list http://localhost:9092 <span class=\"token parameter variable\">--topic</span> example</code></pre>\n<h3 id=\"kafka-consumer-연결-후-메세지-subscribe\"><a href=\"#kafka-consumer-%EC%97%B0%EA%B2%B0-%ED%9B%84-%EB%A9%94%EC%84%B8%EC%A7%80-subscribe\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka consumer 연결 후 메세지 Subscribe</h3>\n<ul>\n<li>새로운 터미널 창에서 Console Consumer를 실행한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd kafka\ndocker-compose exec -it kafka /bin/bash</code></pre>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /bin\n./kafka-console-consumer --bootstrap-server http://localhost:9092 <span class=\"token parameter variable\">--topic</span> example --from-beginning</code></pre>\n<blockquote>\n<p>브로커에 전송된 데이터를 폴링(polling)하여 데이터 확인\n--from-beginning : 가장 처음 offset 데이터부터 폴링(polling)\n'hello world' 라는 메세지 publish 해보기 </p>\n</blockquote>\n<h3 id=\"kafka-consumer-group--offsets\"><a href=\"#kafka-consumer-group--offsets\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka Consumer Group &#x26; Offsets</h3>\n<ul>\n<li>Consumer group 목록</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\">./kafka-consumer-groups --bootstrap-server http://localhost:9092 <span class=\"token parameter variable\">--list</span></code></pre>\n<ul>\n<li>Consumer group 의 offset 확인</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\">./kafka-consumer-groups --bootstrap-server http://localhost:9092 <span class=\"token parameter variable\">--group</span> <span class=\"token operator\">&lt;</span>group_id<span class=\"token operator\">></span> <span class=\"token parameter variable\">--describe</span></code></pre>\n<blockquote>\n<p>--decribe 옵션으로 그룹에 대한 상세 내용 조회</p>\n</blockquote>\n<h3 id=\"consumer-group-의-offset-재설정\"><a href=\"#consumer-group-%EC%9D%98-offset-%EC%9E%AC%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Consumer group 의 offset 재설정</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\">./kafka-consumer-groups --bootstrap-server http://localhost:9092 <span class=\"token parameter variable\">--group</span> <span class=\"token operator\">&lt;</span>group_id<span class=\"token operator\">></span> <span class=\"token parameter variable\">--topic</span> example --reset-offsets --to-earliest <span class=\"token parameter variable\">--execute</span></code></pre>\n<blockquote>\n<p>By default, the offset retention lifetime is set to 7 days. If a consumer group has not committed any offsets for more than 7 days, the offset information will be deleted and the group will be considered inactive.</p>\n<p>There are many other resetting options, run kafka-consumer-groups for details:</p>\n</blockquote>\n<pre class=\"language-bash\"><code class=\"language-bash\"> --shift-by <span class=\"token operator\">&lt;</span>positive_or_negative_integer<span class=\"token operator\">></span>\n --to-current\n --to-latest\n --to-offset <span class=\"token operator\">&lt;</span>offset_integer<span class=\"token operator\">></span>\n --to-datetime <span class=\"token operator\">&lt;</span>datetime_string<span class=\"token operator\">></span>\n --by-duration <span class=\"token operator\">&lt;</span>duration_string<span class=\"token operator\">></span></code></pre>\n<h2 id=\"카프카의-로컬-설치\"><a href=\"#%EC%B9%B4%ED%94%84%EC%B9%B4%EC%9D%98-%EB%A1%9C%EC%BB%AC-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>카프카의 로컬 설치</h2>\n<ul>\n<li>Kafka Download</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">wget https://dlcdn.apache.org/kafka/3.1.0/kafka_2.13-3.1.0.tgz\ntar -xf kafka_2.13-3.1.0.tgz</code></pre>\n<ul>\n<li>Run Kafka</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd kafka_2.13-3.1.0/\nbin/zookeeper-server-start.sh config/zookeeper.properties &amp;\nbin/kafka-server-start.sh config/server.properties &amp;</code></pre>\n<ul>\n<li>Kafka Event 컨슈밍하기 (별도 터미널)</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd kafka_2.13-3.1.0/\nbin/kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9092 --topic petstore</code></pre>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Kafka 기본 명령어","anchor":"#kafka-기본-명령어"},{"depth":2,"value":"Kafka 기본 명령 이해하기","anchor":"#kafka-기본-명령-이해하기"},{"depth":3,"value":"토픽생성","anchor":"#토픽생성"},{"depth":3,"value":"토픽 리스트 보기","anchor":"#토픽-리스트-보기"},{"depth":3,"value":"토픽 상세 조회","anchor":"#토픽-상세-조회"},{"depth":3,"value":"토픽 옵션 수정","anchor":"#토픽-옵션-수정"},{"depth":3,"value":"Kafka producer 연결 후 메세지 Publish","anchor":"#kafka-producer-연결-후-메세지-publish"},{"depth":3,"value":"Kafka consumer 연결 후 메세지 Subscribe","anchor":"#kafka-consumer-연결-후-메세지-subscribe"},{"depth":3,"value":"Kafka Consumer Group & Offsets","anchor":"#kafka-consumer-group--offsets"},{"depth":3,"value":"Consumer group 의 offset 재설정","anchor":"#consumer-group-의-offset-재설정"},{"depth":2,"value":"카프카의 로컬 설치","anchor":"#카프카의-로컬-설치"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/toppings/test-microcks/","title":"API Mock Server"}},{"node":{"path":"/toppings/test-unit/","title":"Unit-Test"}},{"node":{"path":"/toppings/test-messaging/","title":"Contract Test (비동기호출)"}},{"node":{"path":"/toppings/test-contract/","title":"Contract Test (동기호출)"}},{"node":{"path":"/toppings/k8s-kubernetes/","title":"Kubernetes"}},{"node":{"path":"/toppings/cicd-git-action/","title":"Github Action"}},{"node":{"path":"/toppings/cicd-argo/","title":"Argo"}},{"node":{"path":"/tool/si-gpt/","title":""}},{"node":{"path":"/tool/setup-on-prem/","title":"Running on Docker Compose (with Github)"}},{"node":{"path":"/tool/plsql-2-java/","title":"Legacy Modernizer"}},{"node":{"path":"/tool/on-prem-inst/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/pbc-marketplace/","title":"컴포저블 엔터프라이즈 구현을 위한 PBCs(Packaged Business Capabilities)"}},{"node":{"path":"/tool/on-prem-inst-gitea/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/model-driven/","title":"코드 생성"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s 배포 모델링"}},{"node":{"path":"/tool/marketplace/","title":"마켓플레이스"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"인프라 모델링 (쿠버네티스)"}},{"node":{"path":"/tool/event-storming-tool/","title":"이벤트스토밍"}},{"node":{"path":"/tool/google-drive-examples/","title":"Quick Start"}},{"node":{"path":"/tool/event-monitoring/","title":"이벤트 모니터링"}},{"node":{"path":"/tool/development-practice/","title":"강의 개발 및 실습 환경"}},{"node":{"path":"/tool/deepseek-ai/","title":""}},{"node":{"path":"/tool/ddl-to-eventstorming/","title":"DDL To EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"클라우드 IDE"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/tool/chat-gpt/","title":"AI 기반 모델 생성"}},{"node":{"path":"/tool/bc-domain-gen/","title":"자연어 기반 Bounded Context & 도메인 설계 AI"}},{"node":{"path":"/tool/aggregate-design/","title":"애그리거트(Aggregate) 설계"}},{"node":{"path":"/started/key-features/","title":"주요 기능"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template(준비중)"}},{"node":{"path":"/templates-language/python-template/","title":"Python Template "}},{"node":{"path":"/started/domain-driven/","title":"도메인 주도 설계 학습"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template"}},{"node":{"path":"/started/","title":"소개"}},{"node":{"path":"/started/event-storming-learning/","title":"이벤트스토밍 학습"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"자동확장(HPA) 배포"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress 배포모델 설계"}},{"node":{"path":"/info/pricing/","title":"가격 정책"}},{"node":{"path":"/info/partnership/","title":"파트너 프로그램"}},{"node":{"path":"/info/consulting/","title":"컨설팅"}},{"node":{"path":"/info/company/","title":"기업 사례"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"마이크로서비스 구현 및 동작원리 이해"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub 방식의 연동 - Choreography with Deadline added"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub 방식의 연동 - Choreography with Idempotency"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub 방식의 연동 "}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Req/Res 방식의 MSA 연동 "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-basic/","title":"Kafka 기본 명령어 "}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub 방식의 연동 - Compensation 과 Correlation"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/development/cna-start/","title":"단위 마이크로 서비스의 실행 "}},{"node":{"path":"/development/circuit-breaker/","title":"Req/Res 방식에서 장애전파 차단 - 서킷브레이커 "}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/example-scenario/library-system/","title":"도서관 시스템"}},{"node":{"path":"/example-scenario/online-lecture/","title":"인터넷 강의수강 시스템"}},{"node":{"path":"/example-scenario/food-delivery/","title":"음식배달"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"동물병원 진료시스템"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"숙소예약"}},{"node":{"path":"/custom-template/unit-test/","title":"테스트 자동화"}},{"node":{"path":"/custom-template/understanding-template-structure/","title":"템플릿 구조의 이해"}},{"node":{"path":"/custom-template/tutorial/","title":"커스텀 템플릿 개념"}},{"node":{"path":"/custom-template/template-syntax/","title":"Template 문법의 이해"}},{"node":{"path":"/custom-template/template-structure/","title":"템플릿 파일 구조"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"커스텀 템플릿 생성 방법"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0 기반 목 서버 생성 토핑(New)"}},{"node":{"path":"/custom-template/creating-custom-template-1/","title":"커스텀 템플릿 생성"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"반복문 & 조건문"}},{"node":{"path":"/custom-template/designing-template-helper/","title":"Built-in Helper functions"}},{"node":{"path":"/custom-template/custom-template/","title":"Eventstorming Template Objects"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/","title":"이벤트스토밍"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}}]}},"context":{}}