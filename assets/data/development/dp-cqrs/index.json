{"hash":"75411c023f438c73c72b1b2a57d1054a4fe0a84a","data":{"markdownPage":{"id":"252f6ccdbd5666d2c445a17485eb48d0","title":"Data Projection with CQRS","description":"","path":"/development/dp-cqrs/","timeToRead":2,"content":"<h1 id=\"data-projection-with-cqrs\"><a href=\"#data-projection-with-cqrs\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Data Projection with CQRS</h1>\n<div style=\"position: relative; padding-bottom: 56.25%; padding-top: 0px; height: 0; overflow: hidden;\">\n\t<iframe style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\" \n        src=\"https://www.youtube.com/embed/ZJpTEeKsbF4\" \n        frameborder=\"0\" crolling=\"no\" frameborder=\"none\" allowfullscreen=\"\">\n    </iframe>\n</div>\n<br>\n<p>주문서비스와 배송서비스의 상세 모델을 참조하여 Query 모델(Materialized View)을 설계합니다.</p>\n<h2 id=\"이벤트스토밍-모델-준비\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8%EC%8A%A4%ED%86%A0%EB%B0%8D-%EB%AA%A8%EB%8D%B8-%EC%A4%80%EB%B9%84\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트스토밍 모델 준비</h2>\n<ul>\n<li>아래 모델을 새 탭에서 로딩합니다.\n<a href=\"https://www.msaez.io/#/storming/labcqrs-231022\" target=\"_blank\" rel=\"noopener noreferrer\">모델 링크</a></li>\n<li>브라우져에 모델이 로딩되지 않으면, 우측 상단의 (사람모양) 아바타 아이콘을 클릭하여 <strong>깃헙(Github)</strong> 계정으로 로그인 후 리로드하면 아래처럼 랩에 필요한 이벤트스토밍 기본 모델이 출력됩니다. </li>\n<li>로딩된 모델은 우측 팔레트 영역에 스티커 목록이 나타나지 않습니다. 상단 메뉴영역에서 포크 아이콘(FORK)을 클릭해 주어진 모델을 복제합니다. </li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/c9a4575c-d8e2-424b-9587-7ca789dca2e1\" alt=\"image\"></p>\n<ul>\n<li>우측 팔레트 영역에 스티커 목록들이 나타나는 것이 확인됩니다.</li>\n</ul>\n<h2 id=\"cqrs-모델링\"><a href=\"#cqrs-%EB%AA%A8%EB%8D%B8%EB%A7%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CQRS 모델링</h2>\n<ul>\n<li>고객센터팀이 신설되어 '마이페이지' 서비스를 런칭합니다고 가정합니다.</li>\n<li>주문서비스와 배송서비스의 상세 모델을 참조하여 Query 모델(Materialized View)을 설계합니다.</li>\n</ul>\n<h3 id=\"modeling\"><a href=\"#modeling\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MODELING</h3>\n<ul>\n<li>customercenter BC 를 추가</li>\n<li>Read Model 녹색 스티커 추가('MyPage')</li>\n<li>Read Model 속성 Define</li>\n</ul>\n<blockquote>\n<p>Long orderId </p>\n<p>String productId</p>\n<p>String deliveryStatus</p>\n<p>String orderStatus</p>\n</blockquote>\n<img width=\"982\" alt=\"image\" src=\"https://user-images.githubusercontent.com/487999/191055790-5d6a529f-e2f7-49ab-8ee0-74d371f06090.png\">\n<ul>\n<li>Read Model CRUD 상세설계</li>\n</ul>\n<img width=\"434\" alt=\"image\" src=\"https://user-images.githubusercontent.com/487999/191056403-fbdec62b-42ea-4261-8e4e-b631c6c6779a.png\">\n<h3 id=\"code-preview\"><a href=\"#code-preview\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Code Preview</h3>\n<ul>\n<li>상세 설계가 끝난 View Model 코드를 리뷰합니다.</li>\n<li>내 Github으로 Push 하고, GitPod 환경에 로딩합니다.</li>\n</ul>\n<h3 id=\"complete-service-codes\"><a href=\"#complete-service-codes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Complete Service codes</h3>\n<ul>\n<li>배송 마이크로서비스의 도메인 코드를 완성합니다.</li>\n<li>Delivery.java > addToDeliveryList Port method</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">Delivery delivery = new Delivery();\ndelivery.setAddress(orderPlaced.getAddress());\ndelivery.setQuantity(orderPlaced.getQty());\ndelivery.setCustomerId(orderPlaced.getCustomerId());\nrepository().save(delivery);</code></pre>\n<ul>\n<li>고객 마이크로서비스의 MyPage.java의 Id 자동생성을 설정합니다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"> @GeneratedValue(strategy=GenerationType.AUTO)  // 주석해제</code></pre>\n<h3 id=\"마이크로서비스-실행\"><a href=\"#%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%8B%A4%ED%96%89\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마이크로서비스 실행</h3>\n<ul>\n<li>주문, 배송, 고객센터 마이크로서비스를 각각 실행합니다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">mvn spring-boot:run</code></pre>\n<ul>\n<li>customer-center 에 오류가 발생합니다면 다음 ViewHandler.java 부분의 구현체를 확인합니다 : (findByOrderId --> findById)</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">    @StreamListener(KafkaProcessor.INPUT)\n    public void whenDeliveryStarted_then_UPDATE_1(@Payload DeliveryStarted deliveryStarted) {\n        try {\n            if (!deliveryStarted.validate()) return;\n                // view 객체 조회\n            Optional&lt;MyPage&gt; myPageOptional = myPageRepository.findById(deliveryStarted.getOrderId());\n\n            if( myPageOptional.isPresent()) {\n                 MyPage myPage = myPageOptional.get();\n            // view 객체에 이벤트의 eventDirectValue 를 set 함\n                myPage.setDeliveryStatus(&quot;Started&quot;);    \n                // view Repository에 save\n                 myPageRepository.save(myPage);\n                }\n\n\n        }catch (Exception e){\n            e.printStackTrace();\n        }\n    }</code></pre>\n<ul>\n<li>주문 1건을 등록한 후, MyPage 의 내용을 확인합니다</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http :8082/orders productId=1 qty=1\nhttp :8085/myPages</code></pre>\n<ul>\n<li>배송서비스(8084)를 다운시킨 다음, MyPage 의 내용을 확인하여도 서비스가 안정적임을 확인합니다. </li>\n</ul>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Data Projection with CQRS","anchor":"#data-projection-with-cqrs"},{"depth":2,"value":"이벤트스토밍 모델 준비","anchor":"#이벤트스토밍-모델-준비"},{"depth":2,"value":"CQRS 모델링","anchor":"#cqrs-모델링"},{"depth":3,"value":"MODELING","anchor":"#modeling"},{"depth":3,"value":"Code Preview","anchor":"#code-preview"},{"depth":3,"value":"Complete Service codes","anchor":"#complete-service-codes"},{"depth":3,"value":"마이크로서비스 실행","anchor":"#마이크로서비스-실행"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/toppings/test-microcks/","title":"API Mock Server"}},{"node":{"path":"/toppings/test-unit/","title":"Unit-Test"}},{"node":{"path":"/toppings/test-messaging/","title":"Contract Test (비동기호출)"}},{"node":{"path":"/toppings/test-contract/","title":"Contract Test (동기호출)"}},{"node":{"path":"/toppings/k8s-kubernetes/","title":"Kubernetes"}},{"node":{"path":"/toppings/cicd-git-action/","title":"Github Action"}},{"node":{"path":"/toppings/cicd-argo/","title":"Argo"}},{"node":{"path":"/tool/si-gpt/","title":""}},{"node":{"path":"/tool/setup-on-prem/","title":"Running on Docker Compose (with Github)"}},{"node":{"path":"/tool/plsql-2-java/","title":"Legacy Modernizer"}},{"node":{"path":"/tool/on-prem-inst/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/pbc-marketplace/","title":"컴포저블 엔터프라이즈 구현을 위한 PBCs(Packaged Business Capabilities)"}},{"node":{"path":"/tool/on-prem-inst-gitea/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/model-driven/","title":"코드 생성"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s 배포 모델링"}},{"node":{"path":"/tool/marketplace/","title":"마켓플레이스"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"인프라 모델링 (쿠버네티스)"}},{"node":{"path":"/tool/event-storming-tool/","title":"이벤트스토밍"}},{"node":{"path":"/tool/google-drive-examples/","title":"Quick Start"}},{"node":{"path":"/tool/event-monitoring/","title":"이벤트 모니터링"}},{"node":{"path":"/tool/development-practice/","title":"강의 개발 및 실습 환경"}},{"node":{"path":"/tool/deepseek-ai/","title":""}},{"node":{"path":"/tool/ddl-to-eventstorming/","title":"DDL To EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"클라우드 IDE"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/tool/chat-gpt/","title":"AI 기반 모델 생성"}},{"node":{"path":"/tool/bc-domain-gen/","title":"자연어 기반 Bounded Context & 도메인 설계 AI"}},{"node":{"path":"/tool/aggregate-design/","title":"애그리거트(Aggregate) 설계"}},{"node":{"path":"/started/key-features/","title":"주요 기능"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template(준비중)"}},{"node":{"path":"/templates-language/python-template/","title":"Python Template "}},{"node":{"path":"/started/domain-driven/","title":"도메인 주도 설계 학습"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template"}},{"node":{"path":"/started/","title":"소개"}},{"node":{"path":"/started/event-storming-learning/","title":"이벤트스토밍 학습"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"자동확장(HPA) 배포"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress 배포모델 설계"}},{"node":{"path":"/info/pricing/","title":"가격 정책"}},{"node":{"path":"/info/partnership/","title":"파트너 프로그램"}},{"node":{"path":"/info/consulting/","title":"컨설팅"}},{"node":{"path":"/info/company/","title":"기업 사례"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"마이크로서비스 구현 및 동작원리 이해"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub 방식의 연동 - Choreography with Deadline added"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub 방식의 연동 - Choreography with Idempotency"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub 방식의 연동 "}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Req/Res 방식의 MSA 연동 "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-basic/","title":"Kafka 기본 명령어 "}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub 방식의 연동 - Compensation 과 Correlation"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/development/cna-start/","title":"단위 마이크로 서비스의 실행 "}},{"node":{"path":"/development/circuit-breaker/","title":"Req/Res 방식에서 장애전파 차단 - 서킷브레이커 "}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/example-scenario/library-system/","title":"도서관 시스템"}},{"node":{"path":"/example-scenario/online-lecture/","title":"인터넷 강의수강 시스템"}},{"node":{"path":"/example-scenario/food-delivery/","title":"음식배달"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"동물병원 진료시스템"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"숙소예약"}},{"node":{"path":"/custom-template/unit-test/","title":"테스트 자동화"}},{"node":{"path":"/custom-template/understanding-template-structure/","title":"템플릿 구조의 이해"}},{"node":{"path":"/custom-template/tutorial/","title":"커스텀 템플릿 개념"}},{"node":{"path":"/custom-template/template-syntax/","title":"Template 문법의 이해"}},{"node":{"path":"/custom-template/template-structure/","title":"템플릿 파일 구조"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"커스텀 템플릿 생성 방법"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0 기반 목 서버 생성 토핑(New)"}},{"node":{"path":"/custom-template/creating-custom-template-1/","title":"커스텀 템플릿 생성"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"반복문 & 조건문"}},{"node":{"path":"/custom-template/designing-template-helper/","title":"Built-in Helper functions"}},{"node":{"path":"/custom-template/custom-template/","title":"Eventstorming Template Objects"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/","title":"이벤트스토밍"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}}]}},"context":{}}