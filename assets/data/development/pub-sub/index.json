{"hash":"fd6b35d16aed83743db37c5ddfdd0ebf087b0c70","data":{"markdownPage":{"id":"166a4da01c641639f8ec8ba30e89c13f","title":"Pub/Sub 방식의 연동 ","description":"","path":"/development/pub-sub/","timeToRead":1,"content":"<h1 id=\"pubsub-방식의-연동\"><a href=\"#pubsub-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%97%B0%EB%8F%99\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Pub/Sub 방식의 연동</h1>\n<div style=\"position: relative; padding-bottom: 56.25%; padding-top: 0px; height: 0; overflow: hidden;\">\n\t<iframe style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\" \n        src=\"https://www.youtube.com/embed/QvRiuKCZUmM\" \n        frameborder=\"0\" crolling=\"no\" frameborder=\"none\" allowfullscreen=\"\">\n    </iframe>\n</div>\n<br>\n<p>마이크로 서비스간의 통신에서 이벤트 메세지를 Pub/Sub 하는 방법을 실습합니다.  </p>\n<p>Order 서비스에서 주문(OrderPlaced) 이벤트가 발행 되었을 때, Inventory 서비스에서 OrderPlaced 이벤트를 수신하여 재고량을 변경(감소)합니다.  </p>\n<h2 id=\"이벤트스토밍-모델-준비\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8%EC%8A%A4%ED%86%A0%EB%B0%8D-%EB%AA%A8%EB%8D%B8-%EC%A4%80%EB%B9%84\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>이벤트스토밍 모델 준비</h2>\n<ul>\n<li>아래 모델을 새 탭에서 로딩합니다.\n<a href=\"https://www.msaez.io/#/storming/labshoppubsub-2:2023-pubsub2\" target=\"_blank\" rel=\"noopener noreferrer\">모델 링크</a></li>\n<li>브라우져에 모델이 로딩되지 않으면, 우측 상단의 (사람모양) 아바타 아이콘을 클릭하여 <strong>깃헙(Github)</strong> 계정으로 로그인 후 리로드하면 아래처럼 랩에 필요한 이벤트스토밍 기본 모델이 출력됩니다.  </li>\n</ul>\n<p><img src=\"https://github.com/kykim97/shop-sigpt/assets/113568664/4608619d-005f-4164-9be7-5730fce17f85\" alt=\"image\"></p>\n<h2 id=\"order-서비스의-이벤트-publish\"><a href=\"#order-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%9D%98-%EC%9D%B4%EB%B2%A4%ED%8A%B8-publish\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>order 서비스의 이벤트 Publish</h2>\n<p>메뉴의 <strong>CODE</strong> > <strong>ProjectIDE</strong> 를 선택하여, 연결된 브라우져 IDE를 로딩합니다.</p>\n<ul>\n<li>\n<p>order 마이크로 서비스를 실행합니다.</p>\n<blockquote>\n<p>order 폴더를 선택 > Open In Terminal > 터미널에서 아래 커맨드를 실행합니다.\n주문 서비스가 8081 포트로 실행됩니다.</p>\n</blockquote>\n</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">mvn spring-boot:run</code></pre>\n<ul>\n<li>새 터미널을 추가하고 기동된 order 서비스를 호출하여 주문 1건을 요청합니다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http localhost:8081/orders productId=1 productName=TV qty=3</code></pre>\n<ul>\n<li>새 터미널을 추가하고 kafka 유틸리티가 포함된 위치에 접속하기 위하여 docker 를 통하여 shell 에 진입합니다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd kafka\ndocker-compose exec -it kafka /bin/bash\ncd /bin</code></pre>\n<ul>\n<li>kafka Consumer에서 이벤트를 확인합니다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">./kafka-console-consumer --bootstrap-server localhost:9092 --topic labshoppubsub  --from-beginning</code></pre>\n<ul>\n<li>확인된 이벤트 결과 :</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">{&quot;eventType&quot;:&quot;OrderPlaced&quot;,&quot;timestamp&quot;:1717047846007,&quot;id&quot;:1,&quot;productId&quot;:&quot;1&quot;,&quot;qty&quot;:3,&quot;customerId&quot;:null}</code></pre>\n<h2 id=\"inventory-서비스의-이벤트-subscribe\"><a href=\"#inventory-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%9D%98-%EC%9D%B4%EB%B2%A4%ED%8A%B8-subscribe\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Inventory 서비스의 이벤트 Subscribe</h2>\n<ul>\n<li>Inventory 폴더 내  PolicyHandler.java 파일의 코드를 확인합니다.</li>\n<li>PolicyHandler.java --> Inventory.java (Aggregate) 의 Port Method (decreaseStock)을 호출하게 됩니다.</li>\n<li>Inventoy.java의 decreaseStock 내에 작성해야 할 로직은 다음과 같습니다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">repository().findById(Long.valueOf(orderPlaced.getProductId())).ifPresent(inventory-&gt;{\n    \n    inventory.setStock(inventory.getStock() - orderPlaced.getQty()); // do something\n    repository().save(inventory);\n\n\n    });</code></pre>\n<ul>\n<li>새 터미널을 추가하고 inventory 서비스를 실행합니다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">mvn spring-boot:run</code></pre>\n<ul>\n<li>inventory 서비스가 8082 포트로 기동됨을 확인하고 주문을 실행합니다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http :8082/inventories id=1 stock=10\nhttp :8081/orders productId=1 qty=5\nhttp :8082/inventories/1</code></pre>\n<ul>\n<li>OrderPlaced 이벤트에 반응하여 재고량이 감소되는 것을 확인합니다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">{\n    &quot;_links&quot;: {\n        &quot;inventory&quot;: {\n            &quot;href&quot;: &quot;http://localhost:8082/inventories/1&quot;\n        },\n        &quot;self&quot;: {\n            &quot;href&quot;: &quot;http://localhost:8082/inventories/1&quot;\n        }\n    },\n    &quot;stock&quot;: 5\n}</code></pre>\n<h2 id=\"확장미션\"><a href=\"#%ED%99%95%EC%9E%A5%EB%AF%B8%EC%85%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>확장미션</h2>\n<ul>\n<li>delivery Bounded Context 를 생성하고, 주문에 대하여 배송 1건을 추가하는 policy를 모델링하고 구현하시오.</li>\n</ul>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Pub/Sub 방식의 연동","anchor":"#pubsub-방식의-연동"},{"depth":2,"value":"이벤트스토밍 모델 준비","anchor":"#이벤트스토밍-모델-준비"},{"depth":2,"value":"order 서비스의 이벤트 Publish","anchor":"#order-서비스의-이벤트-publish"},{"depth":2,"value":"Inventory 서비스의 이벤트 Subscribe","anchor":"#inventory-서비스의-이벤트-subscribe"},{"depth":2,"value":"확장미션","anchor":"#확장미션"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/toppings/test-unit/","title":"Unit-Test"}},{"node":{"path":"/toppings/test-microcks/","title":"API Mock Server"}},{"node":{"path":"/toppings/test-messaging/","title":"Contract Test (비동기호출)"}},{"node":{"path":"/toppings/test-contract/","title":"Contract Test (동기호출)"}},{"node":{"path":"/toppings/k8s-kubernetes/","title":"Kubernetes"}},{"node":{"path":"/toppings/cicd-git-action/","title":"Github Action"}},{"node":{"path":"/toppings/cicd-argo/","title":"Argo"}},{"node":{"path":"/tool/plsql-2-java/","title":"PL/SQL to Java 자동 테스팅"}},{"node":{"path":"/tool/si-gpt/","title":""}},{"node":{"path":"/tool/setup-on-prem/","title":"Running on Docker Compose (with Github)"}},{"node":{"path":"/tool/pbc-marketplace/","title":"컴포저블 엔터프라이즈 구현을 위한 PBCs(Packaged Business Capabilities)"}},{"node":{"path":"/tool/on-prem-inst/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/on-prem-inst-gitea/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/model-driven/","title":"코드 생성"}},{"node":{"path":"/tool/marketplace/","title":"마켓플레이스"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s 배포 모델링"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"인프라 모델링 (쿠버네티스)"}},{"node":{"path":"/tool/google-drive-examples/","title":"Quick Start"}},{"node":{"path":"/tool/event-monitoring/","title":"이벤트 모니터링"}},{"node":{"path":"/tool/development-practice/","title":"강의 개발 및 실습 환경"}},{"node":{"path":"/tool/event-storming-tool/","title":"이벤트스토밍"}},{"node":{"path":"/tool/deepseek-ai/","title":""}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template(준비중)"}},{"node":{"path":"/tool/ddl-to-eventstorming/","title":"DDL To EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"클라우드 IDE"}},{"node":{"path":"/tool/chat-gpt/","title":"AI 기반 모델 생성"}},{"node":{"path":"/tool/bc-domain-gen/","title":"자연어 기반 Bounded Context & 도메인 설계 AI"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/tool/aggregate-design/","title":"애그리거트(Aggregate) 설계"}},{"node":{"path":"/templates-language/python-template/","title":"Python Template "}},{"node":{"path":"/templates-language/go-template/","title":"Go Template"}},{"node":{"path":"/started/domain-driven/","title":"도메인 주도 설계 학습"}},{"node":{"path":"/started/key-features/","title":"주요 기능"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/started/","title":"소개"}},{"node":{"path":"/started/event-storming-learning/","title":"이벤트스토밍 학습"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress 배포모델 설계"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"자동확장(HPA) 배포"}},{"node":{"path":"/info/pricing/","title":"가격 정책"}},{"node":{"path":"/info/partnership/","title":"파트너 프로그램"}},{"node":{"path":"/info/company/","title":"기업 사례"}},{"node":{"path":"/info/consulting/","title":"컨설팅"}},{"node":{"path":"/example-scenario/online-lecture/","title":"인터넷 강의수강 시스템"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"동물병원 진료시스템"}},{"node":{"path":"/example-scenario/library-system/","title":"도서관 시스템"}},{"node":{"path":"/example-scenario/food-delivery/","title":"음식배달"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"숙소예약"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"마이크로서비스 구현 및 동작원리 이해"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub 방식의 연동 - Choreography with Idempotency"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub 방식의 연동 "}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub 방식의 연동 - Choreography with Deadline added"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Req/Res 방식의 MSA 연동 "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka 기본 명령어 "}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub 방식의 연동 - Compensation 과 Correlation"}},{"node":{"path":"/development/circuit-breaker/","title":"Req/Res 방식에서 장애전파 차단 - 서킷브레이커 "}},{"node":{"path":"/development/cna-start/","title":"단위 마이크로 서비스의 실행 "}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/custom-template/unit-test/","title":"테스트 자동화"}},{"node":{"path":"/custom-template/understanding-template-structure/","title":"템플릿 구조의 이해"}},{"node":{"path":"/custom-template/tutorial/","title":"커스텀 템플릿 개념"}},{"node":{"path":"/custom-template/template-syntax/","title":"Template 문법의 이해"}},{"node":{"path":"/custom-template/template-structure/","title":"템플릿 파일 구조"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"커스텀 템플릿 생성 방법"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0 기반 목 서버 생성 토핑(New)"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"반복문 & 조건문"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/custom-template/designing-template-helper/","title":"Built-in Helper functions"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/custom-template/creating-custom-template-1/","title":"커스텀 템플릿 생성"}},{"node":{"path":"/custom-template/custom-template/","title":"Eventstorming Template Objects"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}},{"node":{"path":"/business/","title":"이벤트스토밍"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}}]}},"context":{}}