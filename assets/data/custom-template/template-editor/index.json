{"hash":"2d1df6197d72b7edf75fa6d19efb902a251e81ad","data":{"markdownPage":{"id":"a8052c3c174bf5550b32daf2a46660b9","title":"Template Editor","description":"","path":"/custom-template/template-editor/","timeToRead":1,"content":"<h1 id=\"template-editor\"><a href=\"#template-editor\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Template Editor</h1>\n<p><a href=\"/custom-template/template-editor-custom-template/\">커스텀 템플릿 생성</a>을 통해 Template Editor를 활용하는 방법에 대해서 설명하였습니다.</p>\n<p>이번에는 MSAEZ에 내장된 템플릿을 활용하여 Template Editor 기능을 사용하는 방법입니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/cc4af1ed-58eb-4829-b571-8fd11fbe1dc0\"></p>\n<p>먼저 모델링을 완료한 모델의 코드 프리뷰를 열어 좌측의 'Base'버튼을 클릭하여 MSAEZ에 내장된 Template을 선택할 수 있으며, 예시에서는 spring-boot 템플릿을 선택하였습니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/5d2ff91f-2992-474f-9104-094e6aa9dd68\"></p>\n<p>이후 좌측 상단에 위치한 Edit Template 아이콘을 클릭하면 Template Editor 화면에 접근하여 기능을 사용할 수 있습니다.</p>\n<h2 id=\"템플릿-파일-선택\"><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF-%ED%8C%8C%EC%9D%BC-%EC%84%A0%ED%83%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>템플릿 파일 선택</h2>\n<p>선택한 템플릿의 코드를 수정하기 위해서는 우선 템플릿 파일을 선택해야 합니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/d9680e6b-6a13-4f18-be78-6cf12320b442\"></p>\n<p>위의 사진처럼 Template Editor 화면 좌측에 위치한 'Template Explorer' 목록에서 선택한 템플릿에 대한 폴더 및 파일을 확인할 수 있습니다.</p>\n<p>여기서 수정할 템플릿 파일이 존재하는 경로로 이동하여 템플릿 파일을 선택할 경우 'EDIT TEMPLATE' 영역에 선택한 템플릿 파일의 코드가 변경되어 화면에 노출되는 것을 확인할 수 있습니다.</p>\n<h2 id=\"템플릿-코드-수정\"><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%BD%94%EB%93%9C-%EC%88%98%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>템플릿 코드 수정</h2>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/f77e8e08-fa7c-4ce6-bf23-acc59c2a703c\"></p>\n<p>이전 템플릿 파일 선택 단계에서 선택한 Aggregate.java의 템플릿 코드가 'EDIT TEMPLATE' 영역에 노출된 것을 확인할 수 있습니다.</p>\n<p>이제 해당 영역에서 템플릿 코드를 원하는 대로 수정 가능합니다.</p>\n<p>이제 좌측의 'Model Explorer'를 참조하여 클래스 내부에 {{keyFieldDescriptor.name}} 데이터가 생성되도록 추가해보겠습니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/bd096c0e-d7b9-473d-bd90-21ab2b34b8b8\"></p>\n<p>위의 사진처럼 클래스 내부에 데이터를 추가한 후 우측 상단의 실행 버튼을 클릭하면 'EDIT TEMPLATE' 영역에 선언된 코드를 기준으로 변경된 결과값을 확인할 수 있습니다.</p>\n<h2 id=\"변환된-파일-확인\"><a href=\"#%EB%B3%80%ED%99%98%EB%90%9C-%ED%8C%8C%EC%9D%BC-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>변환된 파일 확인</h2>\n<p>'EDIT TEMPLATE'에서 코드를 수정하여 변환을 진행하면 아래의 예시처럼 우측 영역에 변환된 결과값이 나타나는 것을 확인할 수 있습니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/7ef625b5-511e-41c9-8ab7-2c4172f03edc\"></p>\n<p>여기서 우측 상단의 'selected file'을 확인할 수 있는데, 'selected file'은 모델링한 스티커별 변환된 파일의 종류를 확인할 수 있습니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/b327bc57-3d63-49f2-a906-a111b3c73f4d\"></p>\n<p>예시에서는 모델링 단계에서 생성한 Aggregate 스티커 Order와 Delivery에 대한 파일이 생성되었습니다.</p>\n<p>여기서 파일을 선택하면 선택한 파일의 변환된 코드를 확인할 수 있어 각 파일별 생성된 결과값에 대해서 확인할 수 있습니다.</p>\n<h2 id=\"수정된-파일-변경\"><a href=\"#%EC%88%98%EC%A0%95%EB%90%9C-%ED%8C%8C%EC%9D%BC-%EB%B3%80%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>수정된 파일 변경</h2>\n<p>이전 단계들을 거쳐 수정된 템플릿을 통해 새로운 템플릿 repository를 생성하거나 혹은 기존의 템플릿 repository를 수정할 수 있습니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/45263853-6e02-42ce-a8f2-103547102032\"></p>\n<p>먼저, 좌측 하단에 위치한 Edited Template Files에 자신이 수정한 Template을 선택합니다.</p>\n<p>이후, 우측으로 스크롤을 이동하면 'open git Menu' 아이콘을 확인할 수 있습니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/c099e3ee-10b5-4016-9cbf-168ecb5f90ac\"></p>\n<p>위의 사진처럼 아이콘을 클릭하면 github 본인 계정의 repository에 생성할 수 있습니다.</p>\n<p>repository의 이름을 위의 예시처럼 목적에 맞게 이름을 변경한 후, 'Create' 버튼을 클릭하면 github repository에 설정한 이름으로 생성된 것을 확인할 수 있습니다.</p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Template Editor","anchor":"#template-editor"},{"depth":2,"value":"템플릿 파일 선택","anchor":"#템플릿-파일-선택"},{"depth":2,"value":"템플릿 코드 수정","anchor":"#템플릿-코드-수정"},{"depth":2,"value":"변환된 파일 확인","anchor":"#변환된-파일-확인"},{"depth":2,"value":"수정된 파일 변경","anchor":"#수정된-파일-변경"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/toppings/test-unit/","title":"Unit-Test"}},{"node":{"path":"/toppings/test-microcks/","title":"API Mock Server"}},{"node":{"path":"/toppings/test-messaging/","title":"Contract Test (비동기호출)"}},{"node":{"path":"/toppings/test-contract/","title":"Contract Test (동기호출)"}},{"node":{"path":"/toppings/cicd-git-action/","title":"Github Action"}},{"node":{"path":"/toppings/k8s-kubernetes/","title":"Kubernetes"}},{"node":{"path":"/tool/si-gpt/","title":""}},{"node":{"path":"/toppings/cicd-argo/","title":"Argo"}},{"node":{"path":"/tool/plsql-2-java/","title":"Legacy Modernizer"}},{"node":{"path":"/tool/setup-on-prem/","title":"Running on Docker Compose (with Github)"}},{"node":{"path":"/tool/pbc-marketplace/","title":"컴포저블 엔터프라이즈 구현을 위한 PBCs(Packaged Business Capabilities)"}},{"node":{"path":"/tool/on-prem-inst/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/on-prem-inst-gitea/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/model-driven/","title":"코드 생성"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s 배포 모델링"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"인프라 모델링 (쿠버네티스)"}},{"node":{"path":"/tool/marketplace/","title":"마켓플레이스"}},{"node":{"path":"/tool/google-drive-examples/","title":"Quick Start"}},{"node":{"path":"/tool/event-storming-tool/","title":"이벤트스토밍"}},{"node":{"path":"/tool/event-monitoring/","title":"이벤트 모니터링"}},{"node":{"path":"/tool/development-practice/","title":"강의 개발 및 실습 환경"}},{"node":{"path":"/tool/deepseek-ai/","title":""}},{"node":{"path":"/tool/ddl-to-eventstorming/","title":"DDL To EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"클라우드 IDE"}},{"node":{"path":"/tool/chat-gpt/","title":"AI 기반 모델 생성"}},{"node":{"path":"/tool/bc-domain-gen/","title":"자연어 기반 Bounded Context & 도메인 설계 AI"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/templates-language/python-template/","title":"Python Template "}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template(준비중)"}},{"node":{"path":"/tool/aggregate-design/","title":"애그리거트(Aggregate) 설계"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template"}},{"node":{"path":"/started/key-features/","title":"주요 기능"}},{"node":{"path":"/started/","title":"소개"}},{"node":{"path":"/started/domain-driven/","title":"도메인 주도 설계 학습"}},{"node":{"path":"/started/event-storming-learning/","title":"이벤트스토밍 학습"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress 배포모델 설계"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"자동확장(HPA) 배포"}},{"node":{"path":"/info/pricing/","title":"가격 정책"}},{"node":{"path":"/info/partnership/","title":"파트너 프로그램"}},{"node":{"path":"/info/consulting/","title":"컨설팅"}},{"node":{"path":"/info/company/","title":"기업 사례"}},{"node":{"path":"/example-scenario/food-delivery/","title":"음식배달"}},{"node":{"path":"/example-scenario/online-lecture/","title":"인터넷 강의수강 시스템"}},{"node":{"path":"/example-scenario/library-system/","title":"도서관 시스템"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"동물병원 진료시스템"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"숙소예약"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"마이크로서비스 구현 및 동작원리 이해"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub 방식의 연동 - Choreography with Deadline added"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub 방식의 연동 - Choreography with Idempotency"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub 방식의 연동 "}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/monolith-2-misvc/","title":"Req/Res 방식의 MSA 연동 "}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka 기본 명령어 "}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/development/circuit-breaker/","title":"Req/Res 방식에서 장애전파 차단 - 서킷브레이커 "}},{"node":{"path":"/development/cna-start/","title":"단위 마이크로 서비스의 실행 "}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub 방식의 연동 - Compensation 과 Correlation"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/custom-template/unit-test/","title":"테스트 자동화"}},{"node":{"path":"/custom-template/understanding-template-structure/","title":"템플릿 구조의 이해"}},{"node":{"path":"/custom-template/tutorial/","title":"커스텀 템플릿 개념"}},{"node":{"path":"/custom-template/template-syntax/","title":"Template 문법의 이해"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/template-structure/","title":"템플릿 파일 구조"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"커스텀 템플릿 생성 방법"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0 기반 목 서버 생성 토핑(New)"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"반복문 & 조건문"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/custom-template/designing-template-helper/","title":"Built-in Helper functions"}},{"node":{"path":"/custom-template/custom-template/","title":"Eventstorming Template Objects"}},{"node":{"path":"/custom-template/creating-custom-template-1/","title":"커스텀 템플릿 생성"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/","title":"이벤트스토밍"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}}]}},"context":{}}