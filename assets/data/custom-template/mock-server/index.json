{"hash":"dbbad657247c5e3cff992cf79ab240635ccdaf72","data":{"markdownPage":{"id":"d428c7e3b949b5d692b6396e1cf30d7e","title":"Open API 3.0 기반 목 서버 생성 토핑(New)","description":"","path":"/custom-template/mock-server/","timeToRead":1,"content":"<h1 id=\"open-api-30-기반-목-서버-생성-토핑new\"><a href=\"#open-api-30-%EA%B8%B0%EB%B0%98-%EB%AA%A9-%EC%84%9C%EB%B2%84-%EC%83%9D%EC%84%B1-%ED%86%A0%ED%95%91new\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Open API 3.0 기반 목 서버 생성 토핑(New)</h1>\n<h2 id=\"개요\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>개요</h2>\n<p>마이크로서비스 간의 연동에 있어서 디펜던시 마이크로서비스에 대한 실제 서비스가 올라가있지 않더라도 병렬 개발이 가능하도록 하기 위해 해당 서버의 mock 서버를 만들어 테스트할 수 있는 개발 디펜던시를 자동으로 생성해주고 Open API 3.0 버전을 통해 example까지 만들어주는 토핑이 추가되었습니다.</p>\n<h2 id=\"세부-스펙\"><a href=\"#%EC%84%B8%EB%B6%80-%EC%8A%A4%ED%8E%99\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>세부 스펙</h2>\n<p><img src=\"https://github.com/msa-ez/msaschool.github.io/assets/113568664/ffaa62b4-e480-4a18-8e2d-dd228744685c\" alt=\"image\"></p>\n<p>마켓플레이스로 이동해서 토핑 쪽에 있는 Local microservice development dependencies의 세부 역할을 살펴보면</p>\n<ol>\n<li>Open API 3.0 api를 자동으로 모델에서 생성한다.</li>\n<li>yml 형태의 api를 생성하고 오픈소스인 마이크록스를 통해 목 서버를 생성한다.</li>\n<li>api 다큐멘테이션을 생성한다.</li>\n<li>이와 관련해서 비동기 연동을 위한 카프카 서버를 함께 실행시켜주는 역할을 한다.</li>\n</ol>\n<p>Open API 3.0의 장점은 example 스펙이 추가되어 여러가지 입력에 대한 기댓값을 작성할 수 있게 되고, 그것을 바탕으로 이벤트스토밍 모델에서 example을 함께 작성이 가능하다는 것입니다.</p>\n<p>이 토핑을 적용하면 각 마이크로서비스에 대한 infra 폴더가 생성되어 그 안에 openapi.yaml 파일이 생성되고 docker-compose를 실행시킴으로써 디펜던시들이 목 서버와 함께 자동으로 생성 및 실행됩니다.</p>\n<h2 id=\"실제-적용\"><a href=\"#%EC%8B%A4%EC%A0%9C-%EC%A0%81%EC%9A%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>실제 적용</h2>\n<p><img src=\"https://github.com/msa-ez/msaschool.github.io/assets/113568664/c8ab2295-4311-4b70-954c-4a63781febd4\" alt=\"스크린샷 2023-10-31 오후 4 36 54\"></p>\n<p>실제로 마켓플레이스에서 가져온 local-dep 토핑을 코드에 적용해보면 order 마이크로서비스 내에 infra 폴더가 생성되고, 그 내부 api 폴더에 openapi.yaml 파일이 생성된 것을 확인할 수 있습니다. 여기에 작성된 스펙을 통해 mock 서버를 직접 만들어나갈 수 있습니다.</p>\n<p><img src=\"https://github.com/msa-ez/msaschool.github.io/assets/113568664/c7ee0127-a6d9-4591-9247-1e798ee40278\" alt=\"스크린샷 2023-10-31 오후 4 39 28\"></p>\n<p>해당 스펙에 명시된 example을 통해 각 제품에 대한 주문 액션이 취해지면 재고량이 줄어드는 리턴값이 주어집니다.</p>\n<p><img src=\"https://github.com/msa-ez/msaschool.github.io/assets/113568664/eb61ae67-423a-44b5-a643-5fdae703c57b\" alt=\"스크린샷 2023-10-31 오후 4 58 09\"></p>\n<p>커맨드를 설정할 때 예시 데이터를 입력할 수 있는 ui가 추가되어 위 ui에서 example의 결과값을 직접 입력해 편집이 가능합니다. </p>\n<p>여기서 Given, When, Then은 각각 Aggregate의 기존 상태, 호출된 api, 그로 인해 발행된 도메인 이벤트에서 담고 있는 데이터를 의미합니다. 테스트를 위해 입력한 데이터 값을 그대로 받아서 open api 스펙에서 생성이 가능합니다.</p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Open API 3.0 기반 목 서버 생성 토핑(New)","anchor":"#open-api-30-기반-목-서버-생성-토핑new"},{"depth":2,"value":"개요","anchor":"#개요"},{"depth":2,"value":"세부 스펙","anchor":"#세부-스펙"},{"depth":2,"value":"실제 적용","anchor":"#실제-적용"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/toppings/test-unit/","title":"Unit-Test"}},{"node":{"path":"/toppings/test-microcks/","title":"API Mock Server"}},{"node":{"path":"/toppings/test-messaging/","title":"Contract Test (비동기호출)"}},{"node":{"path":"/toppings/test-contract/","title":"Contract Test (동기호출)"}},{"node":{"path":"/toppings/k8s-kubernetes/","title":"Kubernetes"}},{"node":{"path":"/toppings/cicd-git-action/","title":"Github Action"}},{"node":{"path":"/toppings/cicd-argo/","title":"Argo"}},{"node":{"path":"/tool/si-gpt/","title":""}},{"node":{"path":"/tool/setup-on-prem/","title":"Running on Docker Compose (with Github)"}},{"node":{"path":"/tool/plsql-2-java/","title":"Legacy Modernizer"}},{"node":{"path":"/tool/pbc-marketplace/","title":"컴포저블 엔터프라이즈 구현을 위한 PBCs(Packaged Business Capabilities)"}},{"node":{"path":"/tool/on-prem-inst/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/on-prem-inst-gitea/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/model-driven/","title":"코드 생성"}},{"node":{"path":"/tool/marketplace/","title":"마켓플레이스"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s 배포 모델링"}},{"node":{"path":"/tool/event-storming-tool/","title":"이벤트스토밍"}},{"node":{"path":"/tool/google-drive-examples/","title":"Quick Start"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"인프라 모델링 (쿠버네티스)"}},{"node":{"path":"/tool/event-monitoring/","title":"이벤트 모니터링"}},{"node":{"path":"/tool/ddl-to-eventstorming/","title":"DDL To EventStorming"}},{"node":{"path":"/tool/deepseek-ai/","title":""}},{"node":{"path":"/tool/development-practice/","title":"강의 개발 및 실습 환경"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"클라우드 IDE"}},{"node":{"path":"/tool/bc-domain-gen/","title":"자연어 기반 Bounded Context & 도메인 설계 AI"}},{"node":{"path":"/tool/chat-gpt/","title":"AI 기반 모델 생성"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/templates-language/python-template/","title":"Python Template "}},{"node":{"path":"/tool/aggregate-design/","title":"애그리거트(Aggregate) 설계"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template(준비중)"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template"}},{"node":{"path":"/started/domain-driven/","title":"도메인 주도 설계 학습"}},{"node":{"path":"/started/event-storming-learning/","title":"이벤트스토밍 학습"}},{"node":{"path":"/started/","title":"소개"}},{"node":{"path":"/started/key-features/","title":"주요 기능"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress 배포모델 설계"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"자동확장(HPA) 배포"}},{"node":{"path":"/info/pricing/","title":"가격 정책"}},{"node":{"path":"/info/partnership/","title":"파트너 프로그램"}},{"node":{"path":"/info/consulting/","title":"컨설팅"}},{"node":{"path":"/info/company/","title":"기업 사례"}},{"node":{"path":"/example-scenario/online-lecture/","title":"인터넷 강의수강 시스템"}},{"node":{"path":"/example-scenario/library-system/","title":"도서관 시스템"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"동물병원 진료시스템"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"숙소예약"}},{"node":{"path":"/example-scenario/food-delivery/","title":"음식배달"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"마이크로서비스 구현 및 동작원리 이해"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub 방식의 연동 - Choreography with Idempotency"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub 방식의 연동 "}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub 방식의 연동 - Choreography with Deadline added"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Req/Res 방식의 MSA 연동 "}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka 기본 명령어 "}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub 방식의 연동 - Compensation 과 Correlation"}},{"node":{"path":"/development/cna-start/","title":"단위 마이크로 서비스의 실행 "}},{"node":{"path":"/development/circuit-breaker/","title":"Req/Res 방식에서 장애전파 차단 - 서킷브레이커 "}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/custom-template/understanding-template-structure/","title":"템플릿 구조의 이해"}},{"node":{"path":"/custom-template/unit-test/","title":"테스트 자동화"}},{"node":{"path":"/custom-template/template-syntax/","title":"Template 문법의 이해"}},{"node":{"path":"/custom-template/tutorial/","title":"커스텀 템플릿 개념"}},{"node":{"path":"/custom-template/template-structure/","title":"템플릿 파일 구조"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0 기반 목 서버 생성 토핑(New)"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"커스텀 템플릿 생성 방법"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"반복문 & 조건문"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/custom-template/designing-template-helper/","title":"Built-in Helper functions"}},{"node":{"path":"/custom-template/custom-template/","title":"Eventstorming Template Objects"}},{"node":{"path":"/custom-template/creating-custom-template-1/","title":"커스텀 템플릿 생성"}},{"node":{"path":"/business/","title":"이벤트스토밍"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}}]}},"context":{}}