{"hash":"e9f67de1cb8835884abcbad29e5aea373b3bc52c","data":{"markdownPage":{"id":"60d5e871a4abf53041290c07bb035458","title":"Template 문법의 이해","description":"","path":"/custom-template/template-syntax/","timeToRead":2,"content":"<h1 id=\"template-문법의-이해\"><a href=\"#template-%EB%AC%B8%EB%B2%95%EC%9D%98-%EC%9D%B4%ED%95%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Template 문법의 이해</h1>\n<h3 id=\"mustache구문\"><a href=\"#mustache%EA%B5%AC%EB%AC%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Mustache구문</h3>\n<p>템플릿 파일에서 템플릿 코드를 작성할 때, 일부 데이터는 동적으로 생성되도록 처리해야되며, mustache의 개념을 이해해야합니다.</p>\n<p>mustache란 데이터와 템플릿을 사용하여 동적으로 문자열을 생성하는 템플릿 엔진을 의미하며, 중괄호('{{}}')를 사용하고있습니다.</p>\n<p>mustache 내부에는 대체될 변수가 들어올 수도 있고 조건식이 들어올 수도 있습니다. 다음은 mustache구문의 예시입니다.</p>\n<p>1) 변수</p>\n<p>가장 기본적인 형태로 '{{변수명}}'의 형태로 사용됩니다. 이후 변수명은 그에 맞는 데이터로 대체됩니다.</p>\n<pre class=\"language-text\"><code class=\"language-text\">예) 이름이라는 데이터에 홍길동이 있을 경우 \n안녕하세요, {{이름}}님!\n=&gt; &#39;안녕하세요, 홍길동님!&#39;이 출력</code></pre>\n<p>2) 세션(#)</p>\n<p>'{{#조건}}{{/조건}}'의 형태로 사용되며 조건이 참일 경우 내용이 출력됩니다.</p>\n<pre class=\"language-text\"><code class=\"language-text\">예) isLogin이 true이며, 이름이라는 데이터에 홍길동이 있을 경우\n{{#isLogin}}\n    {{이름}}님 접속을 환영합니다!\n{{/isLogin}}\n=&gt; &#39;홍길동님 접속을 환영합니다!&#39;가 출력</code></pre>\n<p>3) 역 세션(^)</p>\n<p>'{{^조건}}{{/조건}}'의 형태로 사용되며 세션과 반대로 조건이 거짓일 경우 내용이 출력됩니다.</p>\n<pre class=\"language-text\"><code class=\"language-text\">예) isLogin이 false일 경우\n{{^isLogin}}\n    로그인을 진행해주시길 바랍니다.\n{{/isLogin}}\n=&gt; 역 세션 조건에 부합되므로 &#39;로그인을 진행해주시길 바랍니다&#39;가 출력</code></pre>\n<p>4) 데이터 접근</p>\n<p>mustache구문에서는 '.'과 '../', '@root를 사용하여 데이터에 접근할 수 있습니다. </p>\n<p>'.'의 경우 현재 겍체의 내부 속성에 대해서 접근할 때 사용하며, </p>\n<p>'../'의 경우 현재 객체의 상위 속성에 접근할 때 사용할 수 있습니다.</p>\n<p>'@root'의 경우 현재 객체의 최상위 루트 속성에 접근할 때 사용할 수 있습니다.</p>\n<pre class=\"language-text\"><code class=\"language-text\">예)\n    {{#student}}\n        {{name.koreanName}}\n    {{/student}}\n    =&gt; student의 데이터들이 출력되는데 그 중 name의 koreanName에 해당하는 결과값이 출력됩니다.\n\n    {{#student}}\n        {{../class.name}}\n    {{/student}}\n    =&gt; student의 상위 속성인 class의 데이터중 name에 해당하는 결과값이 출력됩니다.\n\n    {{#student}}\n        {{@root.name}}\n    {{/student}}\n    =&gt; student 객체의 최상위 루트의 name에 해당하는 결과값이 출력됩니다. \n    만약 최상위 루트가 school일 경우 school.name에 해당하는 결과값을 출력합니다.</code></pre>\n<h3 id=\"반복문조건문\"><a href=\"#%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%A1%B0%EA%B1%B4%EB%AC%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>반복문/조건문</h3>\n<p>mustache구문에 반복문과 조건문을 활용한다면 다양한 상황에 적절한 데이터를 반환할 수 있습니다.</p>\n<p>다음은 mustache구문에 사용되는 반복문과 조건문입니다.</p>\n<p>1) 리스트</p>\n<p>'{{#리스트}}{{/리스트}}'의 형태로 사용되며 배열과 같은 데이터 구조를 순회하면서 각 항목에 대한 내용을 반복적으로 출력하는데 사용됩니다.</p>\n<pre class=\"language-text\"><code class=\"language-text\">예) fruits의 이름에 사과, 배, 딸기가 있을 경우\n{{#fruits}}\n    {{name}} \n{{/fruits}}\n=&gt; &#39;사과 배 딸기&#39;가 출력</code></pre>\n<p>2) each</p>\n<p>'{{#each 반복가능한객체}}{{/each}}'의 형태로 사용되며 배열이나 리스트와 같은 반복 가능한 객체를 순회하는 데 사용됩니다.</p>\n<pre class=\"language-text\"><code class=\"language-text\">예) fruits의 이름에 사과, 배, 딸기가 있을 경우\n{{#each fruits}}\n    {{this}}\n{{/each}}\n=&gt; &#39;사과 배 딸기&#39;가 출력되며 여기서 {{this}}란 현재 순회중인 항목을 나타낼 때 사용할 수 있습니다.</code></pre>\n<p>3) Object Iteration</p>\n<p>'{{#each 반복가능한객체}}{{@key}}{{/each}}'의 형태로 사용되며 주어진 객체의 속성들을 반복하면서 각 속성에 대한 처리를 수행하는 것을 의미합니다. </p>\n<p>each의 경우 배열을 반복할 때 사용한다면 Object Iteration은 객체를 반복할 때 사용하며, '@key'를 사용하여 객체의 키에 접근할 수 있습니다.</p>\n<pre class=\"language-text\"><code class=\"language-text\">예)\nuser:\n    {\n        name: &#39;홍길동&#39;,\n        age: 25,\n        email: &#39;gildong@example.com&#39;\n    }\n위와 같은 데이터 user가 있을 경우\n{{#each user}}\n    {{@key}}: {{this}}\n{{/each}}\n=&gt; \nname: 홍길동\nage: 25\nemail: gildong@example.com 이 출력된다.</code></pre>\n<p>4) if ~ else ~</p>\n<p>'{{#if 조건}}{{else}}{{/if}}' 의 형태로 사용되며 조건에는 결과값이 true 또는 false가 되는 조건식 혹은 값이 들어갈 수 있습니다.</p>\n<p>'{{#if 조건}}{{/if}}'의 형태가 기본적으로 사용되며 조건의 결과가 true로 만족되는 경우에 특정 블록을 실행하는데 사용하며, 그에 반대되는 결과값일 경우에 블록 실행이 필요하다면 '{{else}}'를 사용할 수 있습니다.</p>\n<pre class=\"language-text\"><code class=\"language-text\">예) name이 홍길동일 경우\n{{#if isLogin}}\n    안녕하세요 {{name}}님!\n{{else}}\n    로그인을 진행해 주세요.\n{{/if}}\n=&gt; isLogin이 true일 경우 &#39;안녕하세요 홍길동님!&#39;이 출력되며 false일 경우 else 블록에 있는 &#39;로그인을 진행해 주세요.&#39;가 출력된다.</code></pre>\n<p>5) unless\n'{{#unless 조건}}{{/unless}}'의 형태로 사용되며 주어진 조건이 거짓일 때 특정 블록을 실행하는데 사용할 수 있습니다.</p>\n<pre class=\"language-text\"><code class=\"language-text\">예) name이 홍길동일 경우\n{{#unless isStudent}}\n    {{name}}은 학생이 아닙니다.\n{{/unless}}\n=&gt; isStudent가 false라면 unless조건에 만족되어 &#39;홍길동은 학생이 아닙니다.&#39;가 출력된다.</code></pre>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Template 문법의 이해","anchor":"#template-문법의-이해"},{"depth":3,"value":"Mustache구문","anchor":"#mustache구문"},{"depth":3,"value":"반복문/조건문","anchor":"#반복문조건문"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/toppings/test-unit/","title":"Unit-Test"}},{"node":{"path":"/toppings/test-microcks/","title":"API Mock Server"}},{"node":{"path":"/toppings/test-messaging/","title":"Contract Test (비동기호출)"}},{"node":{"path":"/toppings/test-contract/","title":"Contract Test (동기호출)"}},{"node":{"path":"/toppings/k8s-kubernetes/","title":"Kubernetes"}},{"node":{"path":"/toppings/cicd-argo/","title":"Argo"}},{"node":{"path":"/toppings/cicd-git-action/","title":"Github Action"}},{"node":{"path":"/tool/si-gpt/","title":""}},{"node":{"path":"/tool/setup-on-prem/","title":"Running on Docker Compose (with Github)"}},{"node":{"path":"/tool/pbc-marketplace/","title":"컴포저블 엔터프라이즈 구현을 위한 PBCs(Packaged Business Capabilities)"}},{"node":{"path":"/tool/plsql-2-java/","title":"Legacy Modernizer"}},{"node":{"path":"/tool/on-prem-inst/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/on-prem-inst-gitea/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/model-driven/","title":"코드 생성"}},{"node":{"path":"/tool/marketplace/","title":"마켓플레이스"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s 배포 모델링"}},{"node":{"path":"/tool/google-drive-examples/","title":"Quick Start"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"인프라 모델링 (쿠버네티스)"}},{"node":{"path":"/tool/event-storming-tool/","title":"이벤트스토밍"}},{"node":{"path":"/tool/event-monitoring/","title":"이벤트 모니터링"}},{"node":{"path":"/tool/development-practice/","title":"강의 개발 및 실습 환경"}},{"node":{"path":"/tool/ddl-to-eventstorming/","title":"DDL To EventStorming"}},{"node":{"path":"/tool/deepseek-ai/","title":""}},{"node":{"path":"/tool/cloud-ide-tool/","title":"클라우드 IDE"}},{"node":{"path":"/tool/bc-domain-gen/","title":"자연어 기반 Bounded Context & 도메인 설계 AI"}},{"node":{"path":"/tool/chat-gpt/","title":"AI 기반 모델 생성"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template"}},{"node":{"path":"/tool/aggregate-design/","title":"애그리거트(Aggregate) 설계"}},{"node":{"path":"/templates-language/python-template/","title":"Python Template "}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template(준비중)"}},{"node":{"path":"/started/vibe-coding/","title":"Vibe Coding"}},{"node":{"path":"/started/key-features/","title":"주요 기능"}},{"node":{"path":"/started/","title":"소개"}},{"node":{"path":"/started/event-storming-learning/","title":"이벤트스토밍 학습"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/started/domain-driven/","title":"도메인 주도 설계 학습"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress 배포모델 설계"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"자동확장(HPA) 배포"}},{"node":{"path":"/info/pricing/","title":"가격 정책"}},{"node":{"path":"/info/partnership/","title":"파트너 프로그램"}},{"node":{"path":"/info/consulting/","title":"컨설팅"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"마이크로서비스 구현 및 동작원리 이해"}},{"node":{"path":"/info/company/","title":"기업 사례"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub 방식의 연동 - Choreography with Idempotency"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub 방식의 연동 "}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub 방식의 연동 - Choreography with Deadline added"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Req/Res 방식의 MSA 연동 "}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka 기본 명령어 "}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub 방식의 연동 - Compensation 과 Correlation"}},{"node":{"path":"/development/cna-start/","title":"단위 마이크로 서비스의 실행 "}},{"node":{"path":"/development/circuit-breaker/","title":"Req/Res 방식에서 장애전파 차단 - 서킷브레이커 "}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/example-scenario/online-lecture/","title":"인터넷 강의수강 시스템"}},{"node":{"path":"/example-scenario/library-system/","title":"도서관 시스템"}},{"node":{"path":"/example-scenario/food-delivery/","title":"음식배달"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"숙소예약"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"동물병원 진료시스템"}},{"node":{"path":"/custom-template/unit-test/","title":"테스트 자동화"}},{"node":{"path":"/custom-template/understanding-template-structure/","title":"템플릿 구조의 이해"}},{"node":{"path":"/custom-template/tutorial/","title":"커스텀 템플릿 개념"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/template-syntax/","title":"Template 문법의 이해"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"커스텀 템플릿 생성 방법"}},{"node":{"path":"/custom-template/template-structure/","title":"템플릿 파일 구조"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0 기반 목 서버 생성 토핑(New)"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"반복문 & 조건문"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/custom-template/custom-template/","title":"Eventstorming Template Objects"}},{"node":{"path":"/custom-template/designing-template-helper/","title":"Built-in Helper functions"}},{"node":{"path":"/business/","title":"이벤트스토밍"}},{"node":{"path":"/custom-template/creating-custom-template-1/","title":"커스텀 템플릿 생성"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}}]}},"context":{}}