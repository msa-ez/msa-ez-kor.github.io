{"hash":"dbbad657247c5e3cff992cf79ab240635ccdaf72","data":{"markdownPage":{"id":"a2172244d7bbb5a9f8fc8fe8a59455f9","title":"커스텀 템플릿 생성 방법","description":"","path":"/custom-template/template-editor-custom-template/","timeToRead":1,"content":"<h1 id=\"커스텀-템플릿-생성-방법\"><a href=\"#%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%83%9D%EC%84%B1-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>커스텀 템플릿 생성 방법</h1>\n<p>MSAEZ 모델을 기반으로 커스텀 템플릿을 개발하는 과정입니다.</p>\n<h2 id=\"1-repository-생성\"><a href=\"#1-repository-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Repository 생성</h2>\n<p>커스텀 템플릿을 개발하기 위해서는 저장소를 생성해야합니다.\n<a href=\"https://github.com/\" target=\"_blank\" class=\"link-open-text\">https://github.com/</a> 에 접속 후, 템플릿 파일을 만들 repository를 생성합니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/b6f49e7b-4674-47a5-8ed9-69caf94fac64\"></p>\n<p>예시에서는 사용할 템플릿 언어를 제목에 포함하여 'custom-spring-boot'로 생성하였습니다.</p>\n<h2 id=\"2-템플릿-선택\"><a href=\"#2-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%84%A0%ED%83%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. 템플릿 선택</h2>\n<p>생성한 repository의 url을 기반으로 코드 프리뷰 화면에서 템플릿을 등록하는 방법은 다음과 같습니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/8c74d617-3af6-495d-aed8-a055f582513c\"></p>\n<ol>\n<li>template chip 클릭</li>\n<li>템플릿 목록중 Cutsom Template 우측의 select chip 클릭</li>\n<li>Git Repo URL 영역에 git repository url을 입력 후, APPLY 클릭</li>\n</ol>\n<p>적용이 완료되었다면 코드 프리뷰 상단의 메뉴인 'Edit Template' 아이콘({})을 클릭하여 Template Editor 화면으로 진입합니다.</p>\n<p>Template Editor란 MSAEZ내에 내장되어 있는 템플릿 편집기능으로 선택한 템플릿 파일의 코드를 변경하였을 때, 변환된 결과값을 즉각적으로 확인할 수 있는 기능을 제공하고 있습니다.</p>\n<h2 id=\"3-폴더-생성-및-파일-생성\"><a href=\"#3-%ED%8F%B4%EB%8D%94-%EC%83%9D%EC%84%B1-%EB%B0%8F-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. 폴더 생성 및 파일 생성</h2>\n<p>Template Editor 화면에 진입한 후 좌측 하단의 Template Explorer를 확인하면 폴더와 파일이 아무것도 생성되어있지 않은 것을 확인할 수 있습니다.</p>\n<p>템플릿은 각 개발 언어에서 요구하는 폴더 구조 및 파일이 있기 때문에 템플릿 파일과, 템플릿 파일을 구성할 폴더를 생성하여 구조를 구성해야합니다.</p>\n<p>Spring-boot 폴더 구조를 참고하여 폴더와 domain폴더 하위에 생성될 파일 Aggregate.java를 github에서 생성하는 방법은 다음과 같습니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/2c01c3b4-27d8-45bc-bb2e-0ac601c0034c\"></p>\n<ol>\n<li>Add File 클릭 > Create New File 선택.</li>\n<li>'Name your file' 입력창에 Spring-boot의 폴더 구조인 '/src/main/java/com/example/domain'을 입력 > domain하위에 생성할 파일 이름 Aggregate.java 입력.</li>\n<li>'Commit Changes...' 클릭하여 폴더 및 파일 저장.</li>\n</ol>\n<p>위의 단계를 진행하면 입력한 폴더구조와 domain하위의 Aggregate.java가 생성된 것을 확인할 수 있습니다.</p>\n<h2 id=\"4-템플릿-객체-속성-확인\"><a href=\"#4-%ED%85%9C%ED%94%8C%EB%A6%BF-%EA%B0%9D%EC%B2%B4-%EC%86%8D%EC%84%B1-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. 템플릿 객체 속성 확인</h2>\n<p>MSAEZ에서 모델링을 진행하면 그에 따른 참조할 수 있는 속성들이 생성되고, 이를 통해 템플릿 파일의 코드를 구성하는데 활용할 수 있습니다.</p>\n<p>아래의 예시처럼 Template Editor 좌측 상단 영역의 'Model Explorer'에서 모델링을 통해 스티커별 생성된 속성에 대해 확인할 수 있습니다.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/8ab41ce8-7ee0-4d25-ab1b-c2d4021ff19a\"></p>\n<h2 id=\"5-템플릿-파일-수정\"><a href=\"#5-%ED%85%9C%ED%94%8C%EB%A6%BF-%ED%8C%8C%EC%9D%BC-%EC%88%98%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. 템플릿 파일 수정</h2>\n<p>Template Editor 중앙의 영역에 위치한 'EDIT TEMPLATE'에는 생성한 파일에 선언한 코드가 나타나며 아래와 같이 확인할 수 있습니다.</p>\n<p><img src=\"https://github.com/kyusooK/custom-spring-boot/assets/123912988/5e62a6b3-0d18-4b84-a5dd-f14f44835f81\"></p>\n<p>이 위치에 Model Explorer에서 참조한 속성들을 이용하여 템플릿 코드를 선언한 뒤, 상단의 재생버튼을 클릭하면 우측 영역에 변환된 코드들을 확인할 수 있으며,\n이를 이용하여 변환된 결과값을 실시간으로 확인하며 수정할 수 있습니다.</p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"커스텀 템플릿 생성 방법","anchor":"#커스텀-템플릿-생성-방법"},{"depth":2,"value":"1. Repository 생성","anchor":"#1-repository-생성"},{"depth":2,"value":"2. 템플릿 선택","anchor":"#2-템플릿-선택"},{"depth":2,"value":"3. 폴더 생성 및 파일 생성","anchor":"#3-폴더-생성-및-파일-생성"},{"depth":2,"value":"4. 템플릿 객체 속성 확인","anchor":"#4-템플릿-객체-속성-확인"},{"depth":2,"value":"5. 템플릿 파일 수정","anchor":"#5-템플릿-파일-수정"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/toppings/test-unit/","title":"Unit-Test"}},{"node":{"path":"/toppings/test-microcks/","title":"API Mock Server"}},{"node":{"path":"/toppings/test-messaging/","title":"Contract Test (비동기호출)"}},{"node":{"path":"/toppings/test-contract/","title":"Contract Test (동기호출)"}},{"node":{"path":"/toppings/k8s-kubernetes/","title":"Kubernetes"}},{"node":{"path":"/toppings/cicd-git-action/","title":"Github Action"}},{"node":{"path":"/toppings/cicd-argo/","title":"Argo"}},{"node":{"path":"/tool/si-gpt/","title":""}},{"node":{"path":"/tool/setup-on-prem/","title":"Running on Docker Compose (with Github)"}},{"node":{"path":"/tool/plsql-2-java/","title":"Legacy Modernizer"}},{"node":{"path":"/tool/pbc-marketplace/","title":"컴포저블 엔터프라이즈 구현을 위한 PBCs(Packaged Business Capabilities)"}},{"node":{"path":"/tool/on-prem-inst/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/on-prem-inst-gitea/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/model-driven/","title":"코드 생성"}},{"node":{"path":"/tool/marketplace/","title":"마켓플레이스"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s 배포 모델링"}},{"node":{"path":"/tool/event-storming-tool/","title":"이벤트스토밍"}},{"node":{"path":"/tool/google-drive-examples/","title":"Quick Start"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"인프라 모델링 (쿠버네티스)"}},{"node":{"path":"/tool/event-monitoring/","title":"이벤트 모니터링"}},{"node":{"path":"/tool/ddl-to-eventstorming/","title":"DDL To EventStorming"}},{"node":{"path":"/tool/deepseek-ai/","title":""}},{"node":{"path":"/tool/development-practice/","title":"강의 개발 및 실습 환경"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"클라우드 IDE"}},{"node":{"path":"/tool/bc-domain-gen/","title":"자연어 기반 Bounded Context & 도메인 설계 AI"}},{"node":{"path":"/tool/chat-gpt/","title":"AI 기반 모델 생성"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/templates-language/python-template/","title":"Python Template "}},{"node":{"path":"/tool/aggregate-design/","title":"애그리거트(Aggregate) 설계"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template(준비중)"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template"}},{"node":{"path":"/started/domain-driven/","title":"도메인 주도 설계 학습"}},{"node":{"path":"/started/event-storming-learning/","title":"이벤트스토밍 학습"}},{"node":{"path":"/started/","title":"소개"}},{"node":{"path":"/started/key-features/","title":"주요 기능"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress 배포모델 설계"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"자동확장(HPA) 배포"}},{"node":{"path":"/info/pricing/","title":"가격 정책"}},{"node":{"path":"/info/partnership/","title":"파트너 프로그램"}},{"node":{"path":"/info/consulting/","title":"컨설팅"}},{"node":{"path":"/info/company/","title":"기업 사례"}},{"node":{"path":"/example-scenario/online-lecture/","title":"인터넷 강의수강 시스템"}},{"node":{"path":"/example-scenario/library-system/","title":"도서관 시스템"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"동물병원 진료시스템"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"숙소예약"}},{"node":{"path":"/example-scenario/food-delivery/","title":"음식배달"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"마이크로서비스 구현 및 동작원리 이해"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub 방식의 연동 - Choreography with Idempotency"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub 방식의 연동 "}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub 방식의 연동 - Choreography with Deadline added"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token 기반 인증 인가"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Req/Res 방식의 MSA 연동 "}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka 기본 명령어 "}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub 방식의 연동 - Compensation 과 Correlation"}},{"node":{"path":"/development/cna-start/","title":"단위 마이크로 서비스의 실행 "}},{"node":{"path":"/development/circuit-breaker/","title":"Req/Res 방식에서 장애전파 차단 - 서킷브레이커 "}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/custom-template/understanding-template-structure/","title":"템플릿 구조의 이해"}},{"node":{"path":"/custom-template/unit-test/","title":"테스트 자동화"}},{"node":{"path":"/custom-template/template-syntax/","title":"Template 문법의 이해"}},{"node":{"path":"/custom-template/tutorial/","title":"커스텀 템플릿 개념"}},{"node":{"path":"/custom-template/template-structure/","title":"템플릿 파일 구조"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0 기반 목 서버 생성 토핑(New)"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"커스텀 템플릿 생성 방법"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"반복문 & 조건문"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/custom-template/designing-template-helper/","title":"Built-in Helper functions"}},{"node":{"path":"/custom-template/custom-template/","title":"Eventstorming Template Objects"}},{"node":{"path":"/custom-template/creating-custom-template-1/","title":"커스텀 템플릿 생성"}},{"node":{"path":"/business/","title":"이벤트스토밍"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}}]}},"context":{}}